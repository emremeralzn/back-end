// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyGalaxy_Auction_Data_Access.Context;

#nullable disable

namespace MyGalaxy_Auction_Data_Access.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250410200226_mig5AddDataDress")]
    partial class mig5AddDataDress
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MyGalaxy_Auction_Data_Access.Domain.Bid", b =>
                {
                    b.Property<int>("BidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BidId"));

                    b.Property<decimal>("BidAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("BidDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BidStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DressId")
                        .HasColumnType("int");

                    b.Property<int>("ElectronicId")
                        .HasColumnType("int");

                    b.Property<int>("EstateId")
                        .HasColumnType("int");

                    b.Property<int>("MusicalInstrumentId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("BidId");

                    b.HasIndex("DressId");

                    b.HasIndex("ElectronicId");

                    b.HasIndex("EstateId");

                    b.HasIndex("MusicalInstrumentId");

                    b.HasIndex("UserId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Bids");
                });

            modelBuilder.Entity("MyGalaxy_Auction_Data_Access.Domain.Dress", b =>
                {
                    b.Property<int>("DressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DressId"));

                    b.Property<string>("AdditionalInformation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("AuctionPrice")
                        .HasColumnType("float");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SellerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DressId");

                    b.HasIndex("SellerId");

                    b.ToTable("Dresses");

                    b.HasData(
                        new
                        {
                            DressId = 1,
                            AdditionalInformation = "Yazlık kırmızı elbise.",
                            AuctionPrice = 0.0,
                            Brand = "Zara",
                            Color = "Kırmızı",
                            EndTime = new DateTime(2025, 4, 17, 20, 2, 25, 288, DateTimeKind.Utc).AddTicks(3319),
                            Image = "https://example.com/images/dress1.jpg",
                            IsActive = true,
                            Material = "Pamuk",
                            Price = 450.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            Size = "M",
                            StartTime = new DateTime(2025, 4, 10, 20, 2, 25, 288, DateTimeKind.Utc).AddTicks(3314),
                            Type = "Elbise"
                        },
                        new
                        {
                            DressId = 2,
                            AdditionalInformation = "Şık siyah ceket.",
                            AuctionPrice = 0.0,
                            Brand = "Mango",
                            Color = "Siyah",
                            EndTime = new DateTime(2025, 4, 15, 20, 2, 25, 288, DateTimeKind.Utc).AddTicks(3331),
                            Image = "https://example.com/images/dress2.jpg",
                            IsActive = true,
                            Material = "Polyester",
                            Price = 750.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            Size = "L",
                            StartTime = new DateTime(2025, 4, 10, 20, 2, 25, 288, DateTimeKind.Utc).AddTicks(3331),
                            Type = "Ceket"
                        },
                        new
                        {
                            DressId = 3,
                            AdditionalInformation = "Kot pantolon.",
                            AuctionPrice = 0.0,
                            Brand = "LC Waikiki",
                            Color = "Mavi",
                            EndTime = new DateTime(2025, 4, 16, 20, 2, 25, 288, DateTimeKind.Utc).AddTicks(3335),
                            Image = "https://example.com/images/dress3.jpg",
                            IsActive = true,
                            Material = "Denim",
                            Price = 300.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            Size = "S",
                            StartTime = new DateTime(2025, 4, 10, 20, 2, 25, 288, DateTimeKind.Utc).AddTicks(3334),
                            Type = "Pantolon"
                        },
                        new
                        {
                            DressId = 4,
                            AdditionalInformation = "Keten yazlık elbise.",
                            AuctionPrice = 0.0,
                            Brand = "H&M",
                            Color = "Beyaz",
                            EndTime = new DateTime(2025, 4, 18, 20, 2, 25, 288, DateTimeKind.Utc).AddTicks(3337),
                            Image = "https://example.com/images/dress4.jpg",
                            IsActive = true,
                            Material = "Keten",
                            Price = 520.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            Size = "L",
                            StartTime = new DateTime(2025, 4, 10, 20, 2, 25, 288, DateTimeKind.Utc).AddTicks(3337),
                            Type = "Elbise"
                        },
                        new
                        {
                            DressId = 5,
                            AdditionalInformation = "Kışlık yün ceket.",
                            AuctionPrice = 0.0,
                            Brand = "Pull&Bear",
                            Color = "Lacivert",
                            EndTime = new DateTime(2025, 4, 20, 20, 2, 25, 288, DateTimeKind.Utc).AddTicks(3341),
                            Image = "https://example.com/images/dress5.jpg",
                            IsActive = true,
                            Material = "Yün",
                            Price = 980.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            Size = "XL",
                            StartTime = new DateTime(2025, 4, 10, 20, 2, 25, 288, DateTimeKind.Utc).AddTicks(3340),
                            Type = "Ceket"
                        },
                        new
                        {
                            DressId = 6,
                            AdditionalInformation = "Günlük pantolon.",
                            AuctionPrice = 0.0,
                            Brand = "Defacto",
                            Color = "Siyah",
                            EndTime = new DateTime(2025, 4, 17, 20, 2, 25, 288, DateTimeKind.Utc).AddTicks(3343),
                            Image = "https://example.com/images/dress6.jpg",
                            IsActive = true,
                            Material = "Pamuk",
                            Price = 270.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            Size = "M",
                            StartTime = new DateTime(2025, 4, 10, 20, 2, 25, 288, DateTimeKind.Utc).AddTicks(3343),
                            Type = "Pantolon"
                        },
                        new
                        {
                            DressId = 7,
                            AdditionalInformation = "Şık kot ceket.",
                            AuctionPrice = 0.0,
                            Brand = "Colins",
                            Color = "Açık Mavi",
                            EndTime = new DateTime(2025, 4, 19, 20, 2, 25, 288, DateTimeKind.Utc).AddTicks(3346),
                            Image = "https://example.com/images/dress7.jpg",
                            IsActive = true,
                            Material = "Denim",
                            Price = 680.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            Size = "L",
                            StartTime = new DateTime(2025, 4, 10, 20, 2, 25, 288, DateTimeKind.Utc).AddTicks(3346),
                            Type = "Kot Ceket"
                        },
                        new
                        {
                            DressId = 8,
                            AdditionalInformation = "Kısa yazlık etek.",
                            AuctionPrice = 0.0,
                            Brand = "Stradivarius",
                            Color = "Pembe",
                            EndTime = new DateTime(2025, 4, 14, 20, 2, 25, 288, DateTimeKind.Utc).AddTicks(3349),
                            Image = "https://example.com/images/dress8.jpg",
                            IsActive = true,
                            Material = "Polyester",
                            Price = 240.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            Size = "S",
                            StartTime = new DateTime(2025, 4, 10, 20, 2, 25, 288, DateTimeKind.Utc).AddTicks(3348),
                            Type = "Etek"
                        },
                        new
                        {
                            DressId = 9,
                            AdditionalInformation = "Kışlık mont.",
                            AuctionPrice = 0.0,
                            Brand = "Bershka",
                            Color = "Gri",
                            EndTime = new DateTime(2025, 4, 21, 20, 2, 25, 288, DateTimeKind.Utc).AddTicks(3352),
                            Image = "https://example.com/images/dress9.jpg",
                            IsActive = true,
                            Material = "Polyester",
                            Price = 1100.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            Size = "XL",
                            StartTime = new DateTime(2025, 4, 10, 20, 2, 25, 288, DateTimeKind.Utc).AddTicks(3351),
                            Type = "Mont"
                        },
                        new
                        {
                            DressId = 10,
                            AdditionalInformation = "Gece elbisesi.",
                            AuctionPrice = 0.0,
                            Brand = "Zara",
                            Color = "Mor",
                            EndTime = new DateTime(2025, 4, 22, 20, 2, 25, 288, DateTimeKind.Utc).AddTicks(3355),
                            Image = "https://example.com/images/dress10.jpg",
                            IsActive = true,
                            Material = "İpek",
                            Price = 1300.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            Size = "M",
                            StartTime = new DateTime(2025, 4, 10, 20, 2, 25, 288, DateTimeKind.Utc).AddTicks(3354),
                            Type = "Elbise"
                        },
                        new
                        {
                            DressId = 11,
                            AdditionalInformation = "Rahat ceket.",
                            AuctionPrice = 0.0,
                            Brand = "H&M",
                            Color = "Yeşil",
                            EndTime = new DateTime(2025, 4, 16, 20, 2, 25, 288, DateTimeKind.Utc).AddTicks(3358),
                            Image = "https://example.com/images/dress11.jpg",
                            IsActive = true,
                            Material = "Pamuk",
                            Price = 620.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            Size = "S",
                            StartTime = new DateTime(2025, 4, 10, 20, 2, 25, 288, DateTimeKind.Utc).AddTicks(3357),
                            Type = "Ceket"
                        },
                        new
                        {
                            DressId = 12,
                            AdditionalInformation = "Günlük kullanım için.",
                            AuctionPrice = 0.0,
                            Brand = "Koton",
                            Color = "Bej",
                            EndTime = new DateTime(2025, 4, 18, 20, 2, 25, 288, DateTimeKind.Utc).AddTicks(3360),
                            Image = "https://example.com/images/dress12.jpg",
                            IsActive = true,
                            Material = "Pamuk",
                            Price = 340.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            Size = "L",
                            StartTime = new DateTime(2025, 4, 10, 20, 2, 25, 288, DateTimeKind.Utc).AddTicks(3360),
                            Type = "Pantolon"
                        },
                        new
                        {
                            DressId = 13,
                            AdditionalInformation = "Klasik gömlek.",
                            AuctionPrice = 0.0,
                            Brand = "Pull&Bear",
                            Color = "Krem",
                            EndTime = new DateTime(2025, 4, 17, 20, 2, 25, 288, DateTimeKind.Utc).AddTicks(3363),
                            Image = "https://example.com/images/dress13.jpg",
                            IsActive = true,
                            Material = "Pamuk",
                            Price = 260.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            Size = "M",
                            StartTime = new DateTime(2025, 4, 10, 20, 2, 25, 288, DateTimeKind.Utc).AddTicks(3363),
                            Type = "Gömlek"
                        },
                        new
                        {
                            DressId = 14,
                            AdditionalInformation = "Klasik siyah etek.",
                            AuctionPrice = 0.0,
                            Brand = "Zara",
                            Color = "Siyah",
                            EndTime = new DateTime(2025, 4, 19, 20, 2, 25, 288, DateTimeKind.Utc).AddTicks(3366),
                            Image = "https://example.com/images/dress14.jpg",
                            IsActive = true,
                            Material = "İpek",
                            Price = 500.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            Size = "S",
                            StartTime = new DateTime(2025, 4, 10, 20, 2, 25, 288, DateTimeKind.Utc).AddTicks(3365),
                            Type = "Etek"
                        },
                        new
                        {
                            DressId = 15,
                            AdditionalInformation = "Sıcak tutar.",
                            AuctionPrice = 0.0,
                            Brand = "Defacto",
                            Color = "Kahverengi",
                            EndTime = new DateTime(2025, 4, 23, 20, 2, 25, 288, DateTimeKind.Utc).AddTicks(3368),
                            Image = "https://example.com/images/dress15.jpg",
                            IsActive = true,
                            Material = "Yün",
                            Price = 950.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            Size = "XL",
                            StartTime = new DateTime(2025, 4, 10, 20, 2, 25, 288, DateTimeKind.Utc).AddTicks(3368),
                            Type = "Mont"
                        },
                        new
                        {
                            DressId = 16,
                            AdditionalInformation = "Ofis stili.",
                            AuctionPrice = 0.0,
                            Brand = "Colins",
                            Color = "Gri",
                            EndTime = new DateTime(2025, 4, 20, 20, 2, 25, 288, DateTimeKind.Utc).AddTicks(3371),
                            Image = "https://example.com/images/dress16.jpg",
                            IsActive = true,
                            Material = "Pamuk",
                            Price = 380.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            Size = "M",
                            StartTime = new DateTime(2025, 4, 10, 20, 2, 25, 288, DateTimeKind.Utc).AddTicks(3371),
                            Type = "Pantolon"
                        },
                        new
                        {
                            DressId = 17,
                            AdditionalInformation = "Klasik model.",
                            AuctionPrice = 0.0,
                            Brand = "Mavi",
                            Color = "Koyu Mavi",
                            EndTime = new DateTime(2025, 4, 18, 20, 2, 25, 288, DateTimeKind.Utc).AddTicks(3375),
                            Image = "https://example.com/images/dress17.jpg",
                            IsActive = true,
                            Material = "Denim",
                            Price = 740.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            Size = "L",
                            StartTime = new DateTime(2025, 4, 10, 20, 2, 25, 288, DateTimeKind.Utc).AddTicks(3375),
                            Type = "Kot Ceket"
                        },
                        new
                        {
                            DressId = 18,
                            AdditionalInformation = "Yazlık mini elbise.",
                            AuctionPrice = 0.0,
                            Brand = "Koton",
                            Color = "Turuncu",
                            EndTime = new DateTime(2025, 4, 16, 20, 2, 25, 288, DateTimeKind.Utc).AddTicks(3378),
                            Image = "https://example.com/images/dress18.jpg",
                            IsActive = true,
                            Material = "Keten",
                            Price = 430.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            Size = "M",
                            StartTime = new DateTime(2025, 4, 10, 20, 2, 25, 288, DateTimeKind.Utc).AddTicks(3378),
                            Type = "Elbise"
                        },
                        new
                        {
                            DressId = 19,
                            AdditionalInformation = "Uygun fiyatlı.",
                            AuctionPrice = 0.0,
                            Brand = "LC Waikiki",
                            Color = "Bordo",
                            EndTime = new DateTime(2025, 4, 15, 20, 2, 25, 288, DateTimeKind.Utc).AddTicks(3381),
                            Image = "https://example.com/images/dress19.jpg",
                            IsActive = true,
                            Material = "Pamuk",
                            Price = 210.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            Size = "S",
                            StartTime = new DateTime(2025, 4, 10, 20, 2, 25, 288, DateTimeKind.Utc).AddTicks(3380),
                            Type = "Etek"
                        },
                        new
                        {
                            DressId = 20,
                            AdditionalInformation = "Nefes alır kumaş.",
                            AuctionPrice = 0.0,
                            Brand = "H&M",
                            Color = "Beyaz",
                            EndTime = new DateTime(2025, 4, 22, 20, 2, 25, 288, DateTimeKind.Utc).AddTicks(3383),
                            Image = "https://example.com/images/dress20.jpg",
                            IsActive = true,
                            Material = "Keten",
                            Price = 290.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            Size = "M",
                            StartTime = new DateTime(2025, 4, 10, 20, 2, 25, 288, DateTimeKind.Utc).AddTicks(3383),
                            Type = "Gömlek"
                        });
                });

            modelBuilder.Entity("MyGalaxy_Auction_Data_Access.Domain.Electronic", b =>
                {
                    b.Property<int>("ElectronicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ElectronicId"));

                    b.Property<string>("AdditionalInformation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("AuctionPrice")
                        .HasColumnType("float");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ManufacturingYear")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SellerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ElectronicId");

                    b.HasIndex("SellerId");

                    b.ToTable("Electronics");
                });

            modelBuilder.Entity("MyGalaxy_Auction_Data_Access.Domain.Estate", b =>
                {
                    b.Property<int>("EstateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstateId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("AuctionPrice")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RoomCount")
                        .HasColumnType("int");

                    b.Property<string>("SellerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SquareMeters")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EstateId");

                    b.HasIndex("SellerId");

                    b.ToTable("Estates");
                });

            modelBuilder.Entity("MyGalaxy_Auction_Data_Access.Domain.MusicalInstrument", b =>
                {
                    b.Property<int>("MusicalInstrumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MusicalInstrumentId"));

                    b.Property<double>("AuctionPrice")
                        .HasColumnType("float");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SellerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("MusicalInstrumentId");

                    b.HasIndex("SellerId");

                    b.ToTable("MusicalInstruments");
                });

            modelBuilder.Entity("MyGalaxy_Auction_Data_Access.Domain.PaymentHistory", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<string>("ClientSecret")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DressId")
                        .HasColumnType("int");

                    b.Property<int>("ElectronicId")
                        .HasColumnType("int");

                    b.Property<int>("EstateId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("MusicalInstrumentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PayDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StripePaymentIntentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("PaymentId");

                    b.HasIndex("DressId")
                        .IsUnique();

                    b.HasIndex("ElectronicId")
                        .IsUnique();

                    b.HasIndex("EstateId")
                        .IsUnique();

                    b.HasIndex("MusicalInstrumentId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.HasIndex("VehicleId")
                        .IsUnique();

                    b.ToTable("PaymentHistories");
                });

            modelBuilder.Entity("MyGalaxy_Auction_Data_Access.Domain.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleId"));

                    b.Property<string>("AdditionalInformation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("AuctionPrice")
                        .HasColumnType("float");

                    b.Property<string>("BrandAndModel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("EngineCapacity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ManufacturingYear")
                        .HasColumnType("int");

                    b.Property<int>("Millage")
                        .HasColumnType("int");

                    b.Property<string>("PlateNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SellerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("VehicleId");

                    b.HasIndex("SellerId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("MyGalaxy_Auction_Data_Access.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("MyGalaxy_Auction_Data_Access.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("MyGalaxy_Auction_Data_Access.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyGalaxy_Auction_Data_Access.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("MyGalaxy_Auction_Data_Access.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyGalaxy_Auction_Data_Access.Domain.Bid", b =>
                {
                    b.HasOne("MyGalaxy_Auction_Data_Access.Domain.Dress", "Dress")
                        .WithMany("Bids")
                        .HasForeignKey("DressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyGalaxy_Auction_Data_Access.Domain.Electronic", "Electronic")
                        .WithMany("Bids")
                        .HasForeignKey("ElectronicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyGalaxy_Auction_Data_Access.Domain.Estate", "Estate")
                        .WithMany("Bids")
                        .HasForeignKey("EstateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyGalaxy_Auction_Data_Access.Domain.MusicalInstrument", "MusicalInstrument")
                        .WithMany("Bids")
                        .HasForeignKey("MusicalInstrumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyGalaxy_Auction_Data_Access.Models.ApplicationUser", "User")
                        .WithMany("Bids")
                        .HasForeignKey("UserId");

                    b.HasOne("MyGalaxy_Auction_Data_Access.Domain.Vehicle", "Vehicle")
                        .WithMany("Bids")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dress");

                    b.Navigation("Electronic");

                    b.Navigation("Estate");

                    b.Navigation("MusicalInstrument");

                    b.Navigation("User");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("MyGalaxy_Auction_Data_Access.Domain.Dress", b =>
                {
                    b.HasOne("MyGalaxy_Auction_Data_Access.Models.ApplicationUser", "Seller")
                        .WithMany("Dresses")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("MyGalaxy_Auction_Data_Access.Domain.Electronic", b =>
                {
                    b.HasOne("MyGalaxy_Auction_Data_Access.Models.ApplicationUser", "Seller")
                        .WithMany("Electronics")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("MyGalaxy_Auction_Data_Access.Domain.Estate", b =>
                {
                    b.HasOne("MyGalaxy_Auction_Data_Access.Models.ApplicationUser", "Seller")
                        .WithMany("Estates")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("MyGalaxy_Auction_Data_Access.Domain.MusicalInstrument", b =>
                {
                    b.HasOne("MyGalaxy_Auction_Data_Access.Models.ApplicationUser", "Seller")
                        .WithMany("MusicalInstruments")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("MyGalaxy_Auction_Data_Access.Domain.PaymentHistory", b =>
                {
                    b.HasOne("MyGalaxy_Auction_Data_Access.Domain.Dress", "Dress")
                        .WithOne("Payment")
                        .HasForeignKey("MyGalaxy_Auction_Data_Access.Domain.PaymentHistory", "DressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyGalaxy_Auction_Data_Access.Domain.Electronic", "Electronic")
                        .WithOne("Payment")
                        .HasForeignKey("MyGalaxy_Auction_Data_Access.Domain.PaymentHistory", "ElectronicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyGalaxy_Auction_Data_Access.Domain.Estate", "Estate")
                        .WithOne("Payment")
                        .HasForeignKey("MyGalaxy_Auction_Data_Access.Domain.PaymentHistory", "EstateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyGalaxy_Auction_Data_Access.Domain.MusicalInstrument", "MusicalInstrument")
                        .WithOne("Payment")
                        .HasForeignKey("MyGalaxy_Auction_Data_Access.Domain.PaymentHistory", "MusicalInstrumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyGalaxy_Auction_Data_Access.Models.ApplicationUser", "User")
                        .WithMany("PaymentHistories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyGalaxy_Auction_Data_Access.Domain.Vehicle", "Vehicle")
                        .WithOne("Payment")
                        .HasForeignKey("MyGalaxy_Auction_Data_Access.Domain.PaymentHistory", "VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dress");

                    b.Navigation("Electronic");

                    b.Navigation("Estate");

                    b.Navigation("MusicalInstrument");

                    b.Navigation("User");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("MyGalaxy_Auction_Data_Access.Domain.Vehicle", b =>
                {
                    b.HasOne("MyGalaxy_Auction_Data_Access.Models.ApplicationUser", "Seller")
                        .WithMany("Vehicles")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("MyGalaxy_Auction_Data_Access.Domain.Dress", b =>
                {
                    b.Navigation("Bids");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("MyGalaxy_Auction_Data_Access.Domain.Electronic", b =>
                {
                    b.Navigation("Bids");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("MyGalaxy_Auction_Data_Access.Domain.Estate", b =>
                {
                    b.Navigation("Bids");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("MyGalaxy_Auction_Data_Access.Domain.MusicalInstrument", b =>
                {
                    b.Navigation("Bids");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("MyGalaxy_Auction_Data_Access.Domain.Vehicle", b =>
                {
                    b.Navigation("Bids");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("MyGalaxy_Auction_Data_Access.Models.ApplicationUser", b =>
                {
                    b.Navigation("Bids");

                    b.Navigation("Dresses");

                    b.Navigation("Electronics");

                    b.Navigation("Estates");

                    b.Navigation("MusicalInstruments");

                    b.Navigation("PaymentHistories");

                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
